#!/bin/bash
# ***************************************************************************
# extras/bootstrap
# ***************************************************************************
# usage: ./bootstrap --with-scm
#   with-scm: Uses SVN or GIT when possible.
# ***************************************************************************

# ***************************************************************************
# Default values
# ***************************************************************************
unset HAVE_SCM  # Use the distributions instead of the scm repositories

# ***************************************************************************
# Parse commandline options
# ***************************************************************************
ARGS=""
TO_UPPERCASE="sed y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/"
for arg; do
    case $arg in
        --without-*)
            eval unset `echo "$arg" | sed 's/--without-\(.*\)/HAVE_\1/' | $TO_UPPERCASE`
            ;;
        --with-*)
            eval `echo "$arg" | sed 's/--with-\(.*\)/HAVE_\1=1/' | $TO_UPPERCASE`
            ;;
        --)
            shift
            break
            ;;
        *)
            ARGS="$ARGS $arg"
            ;;
    esac
    shift
done
ARGS="$ARGS $*"

# ***************************************************************************
# Set proper environment variables
# ***************************************************************************
output="PREFIX=\"`pwd`\"\n"

# ***************************************************************************
# Search for required commands
# ***************************************************************************
REQUIRED_CMDS="wget make tar gunzip bunzip2 unzip"

if [ "$HAVE_SCM" == "1" ]; then
    echo "Enabling use of SCM repositories such as SVN and GIT."
    REQUIRED_CMDS="$REQUIRED_CMDS git svn"
fi

for cmd in $REQUIRED_CMDS; do
    echo -n "Looking for '$cmd'..."
    path=`which $cmd`
    if [ -z $path ]; then
        echo "not found."
        echo "Error: Unable to find '$cmd'."
        echo ""
        echo "Please make sure that the above tool is installed and is reachable"
        echo "through the PATH environment variable."
        exit $E_MISSING_TOOL
    else
        echo "$path."
    fi
    variable=`echo "$cmd" | $TO_UPPERCASE`
    output=$(echo "$output$variable=\"$path\"\n")
done

# ***************************************************************************
# Create config file
# ***************************************************************************
echo -n "Creating config.mak..."
rm -f config.mak
{
    echo "# Automatically generated by bootstrap."
    echo "# Make changes if you know what you're doing."
    if [ "$HAVE_SCM" == "1" ]; then
        echo "HAVE_SCM=$HAVE_SCM"
    fi
    echo -e $output
} > config.mak
echo "done."
echo ""
echo "You should run 'make' to download and install dependent tools and"
echo "libraries."
